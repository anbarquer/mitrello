package controller;

import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Enumeration;

import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;

public class ServletListener implements javax.servlet.ServletContextListener {
	private Connection conexion;

	public ServletListener() {
		conexion = null;
	}

	private void restaurarDatos() {

		try {
			Statement stmt = conexion.createStatement();
			stmt.executeUpdate("CREATE TABLE User(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(40) NOT NULL,USERNAME VARCHAR(20) NOT NULL,EMAIL VARCHAR(50) DEFAULT 'email@email.com',PASSWORD VARCHAR(60));");
			stmt.executeUpdate("CREATE TABLE Board(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(40) NOT NULL,OWNER INTEGER NOT NULL,FOREIGN KEY (OWNER) REFERENCES USER(ID) ON DELETE CASCADE);");
			stmt.executeUpdate("CREATE TABLE List (ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(40) NOT NULL,BOARD INTEGER NOT NULL,FOREIGN KEY (BOARD) REFERENCES BOARD(ID) ON DELETE CASCADE);");
			stmt.executeUpdate("CREATE TABLE Card(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,NAME VARCHAR(40) NOT NULL,LIST INTEGER NOT NULL,FOREIGN KEY (LIST) REFERENCES LIST(ID) ON DELETE CASCADE);");
			stmt.executeUpdate("INSERT INTO User (name, username, password) VALUES('Pedro Pin', 'pedropin', '$2a$10$CE0UeH4ye.2D/oXAelqzneOjG2wS5ZeUGRvnsurWAE15BfYcjLVI2')");
			stmt.executeUpdate("INSERT INTO User (name, username, password) VALUES('Ana Kin', 'anakin', '$2a$10$wZHngl2gIYRzWoom2vTeH.ZXp4nhSxlFePCbaJ9KdQnvlEMU3Cxu6')");
			stmt.executeUpdate("INSERT INTO Board (name, owner) VALUES('Board 01',0)");
			stmt.executeUpdate("INSERT INTO Board (name, owner) VALUES('Board 02',0)");
			stmt.executeUpdate("INSERT INTO Board (name, owner) VALUES('Board 03',1)");
			stmt.executeUpdate("INSERT INTO List (name, board) VALUES('Pendientes',0)");
			stmt.executeUpdate("INSERT INTO List (name, board) VALUES('En curso',0)");
			stmt.executeUpdate("INSERT INTO List (name, board) VALUES('Pendientes',1)");
			stmt.executeUpdate("INSERT INTO List (name, board) VALUES('Pendientes',2)");
			stmt.executeUpdate("INSERT INTO Card (name, list) VALUES('Proyecto PI',0)");
			stmt.executeUpdate("INSERT INTO Card (name, list) VALUES('Proyecto DSDM',2)");
			stmt.executeUpdate("INSERT INTO Card (name, list) VALUES('Proyecto IR',2)");
			stmt.executeUpdate("INSERT INTO Card (name, list) VALUES('Aprobar',3)");

		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

	public void contextInitialized(ServletContextEvent event) {

		try {
			Class.forName("org.hsqldb.jdbcDriver");

		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		}

		try {

			conexion = DriverManager.getConnection(
					"jdbc:hsqldb:file:db/mitrello", "SA", "");

			try {
				Statement stmt = conexion.createStatement();
				stmt.executeQuery("SELECT * FROM USER");

			} catch (Exception e) {
				System.out.println("Restaurando datos");
				restaurarDatos();
			}

			ServletContext sc = event.getServletContext();
			sc.setAttribute("dbConn", conexion);

		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public void contextDestroyed(ServletContextEvent event) {

		try {
			Statement stmt = conexion.createStatement();
			stmt.executeUpdate("SHUTDOWN");
			conexion.close();

			Enumeration<Driver> drivers = DriverManager.getDrivers();
			while (drivers.hasMoreElements()) {
				Driver driver = drivers.nextElement();
				try {
					DriverManager.deregisterDriver(driver);

				} catch (SQLException e) {
					e.printStackTrace();
				}

			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}

}
